@model WebAppSastiServices.Models.ViewModel.RegisterVendorSupplierView
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutDashboardAdmin.cshtml";
}
<!-- start page inner -->
<div class="page-inner">
    <div class="page-title">
        <h3 class="breadcrumb-header">Registration</h3>
    </div>
    <!-- start page main wrapper -->
    <div id="main-wrapper">
        <div class="card card-white">
            @using (Html.BeginForm("Register", "AdminDashboard", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="row m-b-lg">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-md-12">
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control input-md", @placeholder = "Enter User Name" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Contact, "Contact", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control input-md", @placeholder = "Enter Contact no" } })
                                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-12">

                                @Html.LabelFor(model => model.EmailID, "Email", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control input-md", @placeholder = "Enter email" } })
                                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">

                                @Html.LabelFor(model => model.Password)

                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password here" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">

                                @Html.LabelFor(model => model.ConfirmPassword)

                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm password here" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">

                                @Html.LabelFor(model => model.STPRolesID, "Select Role", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("STPRolesID", (SelectList)ViewBag.Roles, "- Select Your Role -", htmlAttributes: new { @class = "form-control" ,@id="RoleID"})
                                @Html.ValidationMessageFor(model => model.STPRolesID, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group col-md-6">

                                @Html.LabelFor(model => model.STPRolesCategoriesID, "Select Role Category", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("STPRolesCategoriesID",null, htmlAttributes: new { @class = "form-control" ,@id="RolesCategories"})
                                @Html.ValidationMessageFor(model => model.STPRolesCategoriesID, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group col-md-12">

                                @Html.LabelFor(model => model.Address, "Address", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control input-md", @placeholder = "Enter Your Address" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                </div>
                <ul class="pagination wizard">
                    <li class="previous"><a href="#" class="btn btn-outline-primary">Previous</a></li>
                    <li class="next ml-auto"><button type="submit" class="btn btn-outline-primary">Next</button></li>
                </ul>
            }
        </div>
    </div>
    <!-- end page main wrapper -->
    <div class="page-footer">
        <p>
            Copyright &copy;
            <script>document.write(new Date().getFullYear())</script> Kaam Waley All rights reserved.
        </p>
    </div>
</div>
<!-- end page inner -->
@section scripts{
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script>
        
        //data bind with dropdown change start----------------
        $("#RoleID").change(function () {
           
            var ID = this.value;
            $("#RolesCategories").empty();
                    //console.log("reach");
                    $.ajax({
                            url: "/AdminDashboard/getRoleCategories",
                            data: { "RoleID": ID },
                            type: "Post",
                            dataType: "json",
                            success: function (response) {
                                $.each(response, function (index, value) {

                                    $("#RolesCategories").append(
                                    $('<option></option>').val(value.ID).html(value.Description));

                                });

                            },
                        error: function (data) {
                            console.log(data);
                            }
                        });

                });
    </script>
}







